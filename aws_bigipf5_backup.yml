---

- name: Get nodes from Inventory and add to Groups
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files: vars/main.yml
  tasks:
  - include_role: 
      name: utils_hosts_aws

- name: BigIP F5 UCS backup
  hosts: localhost
  connection: local
  vars_files: vars/main.yml
  gather_facts: no
  tasks:
    - name: Set Provider BigIP F5 Data
      set_fact:
        f5_provider:
            server: "{{ item.association.public_ip }}"
            server_port: 443
            user: "{{ ec2_bigipf5_user }}"
            password: "{{ ec2_bigipf5_pass }}"
            validate_certs: no
            no_f5_teem: false
      loop: "{{ hostvars[groups['bigipf5'][0]].network_interfaces }}"
      when: item.association is defined and item.association.public_ip is defined

    - name: Create backup UCS (User Configuration Set)
      f5networks.f5_modules.bigip_ucs_fetch:
        provider: "{{ f5_provider }}"
        backup: yes
        only_create_file: no
        dest: /tmp/backup.ucs
      register: backupinfo

    # - name: Debug backup content
    #   debug:
    #     var: backupinfo

- name: Store files via scp
  hosts: "{{ groups['rhelserver'][0] }}"
  connection: ssh
  vars_files: vars/main.yml
  gather_facts: yes
  vars:
    ansible_user: ec2-user
  tasks:
    - name: Create backup folder on backup server
      ansible.builtin.file:
        path: "{{ ec2_rhel_backup_folder }}"
        state: directory
     #become: true

    - name: Copy config to backup server
      copy:
        src: "/tmp/backup.ucs"
        dest: "{{ ec2_rhel_backup_folder }}/f5-{{ '%Y-%m-%dT%H:%M:%S' | strftime(ansible_date_time.epoch) }}"
     #become: true


